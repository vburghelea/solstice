/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from "@tanstack/react-start/server";

import { Route as rootRouteImport } from "./routes/__root";
<<<<<<< HEAD
import { Route as SearchRouteImport } from "./routes/search";
import { Route as EventsRouteImport } from "./routes/events";
=======
import { Route as TeamsRouteImport } from "./routes/teams";
import { Route as ResourcesRouteImport } from "./routes/resources";
import { Route as DesignSystemRouteImport } from "./routes/design-system";
import { Route as AboutRouteImport } from "./routes/about";
>>>>>>> 6c60748 (feat: integrate Vite PWA plugin and enhance app manifest)
import { Route as OnboardingRouteRouteImport } from "./routes/onboarding/route";
import { Route as DashboardRouteRouteImport } from "./routes/dashboard/route";
import { Route as AuthRouteRouteImport } from "./routes/auth/route";
import { Route as IndexRouteImport } from "./routes/index";
import { Route as SystemsIndexRouteImport } from "./routes/systems/index";
import { Route as OnboardingIndexRouteImport } from "./routes/onboarding/index";
import { Route as EventsIndexRouteImport } from "./routes/events/index";
import { Route as DashboardIndexRouteImport } from "./routes/dashboard/index";
<<<<<<< HEAD
import { Route as SystemsSlugRouteImport } from "./routes/systems/$slug";
import { Route as GameGameIdRouteImport } from "./routes/game.$gameId";
import { Route as EventEventIdRouteImport } from "./routes/event.$eventId";
=======
import { Route as EventsSlugRouteImport } from "./routes/events/$slug";
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
import { Route as DashboardTeamsRouteImport } from "./routes/dashboard/teams";
import { Route as DashboardSystemsRouteImport } from "./routes/dashboard/systems";
import { Route as DashboardSocialAuditsRouteImport } from "./routes/dashboard/social-audits";
import { Route as DashboardSettingsRouteImport } from "./routes/dashboard/settings";
import { Route as DashboardReportsRouteImport } from "./routes/dashboard/reports";
import { Route as DashboardProfileRouteImport } from "./routes/dashboard/profile";
import { Route as DashboardMembershipRouteImport } from "./routes/dashboard/membership";
import { Route as DashboardMembersRouteImport } from "./routes/dashboard/members";
<<<<<<< HEAD
<<<<<<< HEAD
import { Route as DashboardGamesRouteImport } from "./routes/dashboard/games";
=======
=======
import { Route as DashboardGamesRouteImport } from "./routes/dashboard/games";
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
import { Route as DashboardForbiddenRouteImport } from "./routes/dashboard/forbidden";
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
import { Route as DashboardEventsRouteImport } from "./routes/dashboard/events";
import { Route as DashboardCampaignsRouteImport } from "./routes/dashboard/campaigns";
import { Route as AuthSignupRouteImport } from "./routes/auth/signup";
import { Route as AuthResetPasswordRouteImport } from "./routes/auth/reset-password";
import { Route as AuthLoginRouteImport } from "./routes/auth/login";
<<<<<<< HEAD
<<<<<<< HEAD
import { Route as AuthForgotPasswordRouteImport } from "./routes/auth/forgot-password";
import { Route as DevEmailIndexRouteImport } from "./routes/dev/email/index";
import { Route as DashboardTeamsIndexRouteImport } from "./routes/dashboard/teams/index";
import { Route as DashboardSystemsIndexRouteImport } from "./routes/dashboard/systems/index";
import { Route as DashboardProfileIndexRouteImport } from "./routes/dashboard/profile/index";
import { Route as DashboardGamesIndexRouteImport } from "./routes/dashboard/games/index";
import { Route as DashboardEventsIndexRouteImport } from "./routes/dashboard/events/index";
import { Route as DashboardCampaignsIndexRouteImport } from "./routes/dashboard/campaigns/index";
import { Route as DevEmailTemplateRouteImport } from "./routes/dev/email/$template";
import { Route as DashboardTeamsCreateRouteImport } from "./routes/dashboard/teams/create";
import { Route as DashboardTeamsBrowseRouteImport } from "./routes/dashboard/teams/browse";
import { Route as DashboardTeamsTeamIdRouteImport } from "./routes/dashboard/teams/$teamId";
import { Route as DashboardSystemsSystemIdRouteImport } from "./routes/dashboard/systems/$systemId";
import { Route as DashboardReviewsPendingRouteImport } from "./routes/dashboard/reviews/pending";
import { Route as DashboardProfileBlocklistRouteImport } from "./routes/dashboard/profile/blocklist";
import { Route as DashboardProfileUserIdRouteImport } from "./routes/dashboard/profile/$userId";
import { Route as DashboardGamesCreateRouteImport } from "./routes/dashboard/games/create";
import { Route as DashboardGamesGameIdRouteImport } from "./routes/dashboard/games/$gameId";
import { Route as DashboardEventsCreateRouteImport } from "./routes/dashboard/events/create";
import { Route as DashboardEventsEventIdRouteImport } from "./routes/dashboard/events/$eventId";
import { Route as DashboardCampaignsCreateRouteImport } from "./routes/dashboard/campaigns/create";
import { Route as DashboardCampaignsCampaignIdRouteImport } from "./routes/dashboard/campaigns/$campaignId";
=======
=======
import { Route as AdminRolesRouteImport } from "./routes/admin/roles";
>>>>>>> 6d449f5 (feat: implement role management dashboard and associated functionality)
import { Route as AdminEventsReviewRouteImport } from "./routes/admin/events-review";
import { Route as DashboardAdminRouteRouteImport } from "./routes/dashboard/admin/route";
import { Route as EventsSlugIndexRouteImport } from "./routes/events/$slug.index";
import { Route as DashboardTeamsIndexRouteImport } from "./routes/dashboard/teams/index";
import { Route as DashboardGamesIndexRouteImport } from "./routes/dashboard/games/index";
import { Route as DashboardEventsIndexRouteImport } from "./routes/dashboard/events/index";
import { Route as DashboardCampaignsIndexRouteImport } from "./routes/dashboard/campaigns/index";
import { Route as EventsSlugRegisterRouteImport } from "./routes/events/$slug.register";
import { Route as DashboardTeamsCreateRouteImport } from "./routes/dashboard/teams/create";
import { Route as DashboardTeamsBrowseRouteImport } from "./routes/dashboard/teams/browse";
import { Route as DashboardTeamsTeamIdRouteImport } from "./routes/dashboard/teams/$teamId";
import { Route as DashboardGamesCreateRouteImport } from "./routes/dashboard/games/create";
import { Route as DashboardGamesGameIdRouteImport } from "./routes/dashboard/games/$gameId";
import { Route as DashboardEventsCreateRouteImport } from "./routes/dashboard/events/create";
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
=======
import { Route as DashboardCampaignsCreateRouteImport } from "./routes/dashboard/campaigns/create";
import { Route as DashboardCampaignsCampaignIdRouteImport } from "./routes/dashboard/campaigns/$campaignId";
>>>>>>> 2c22514 (feat: added baseline campaign functionality, based on games)
import { Route as DashboardAdminRolesRouteImport } from "./routes/dashboard/admin/roles";
import { Route as DashboardAdminEventsReviewRouteImport } from "./routes/dashboard/admin/events-review";
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
import { Route as DashboardTeamsTeamIdIndexRouteImport } from "./routes/dashboard/teams/$teamId.index";
import { Route as DashboardCampaignsCampaignIdIndexRouteImport } from "./routes/dashboard/campaigns/$campaignId/index";
=======
import { Route as DashboardGamesGameIdRouteRouteImport } from "./routes/dashboard/games/$gameId/route";
import { Route as DashboardTeamsTeamIdIndexRouteImport } from "./routes/dashboard/teams/$teamId.index";
import { Route as DashboardGamesGameIdIndexRouteImport } from "./routes/dashboard/games/$gameId/index";
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
=======
import { Route as DashboardTeamsTeamIdIndexRouteImport } from "./routes/dashboard/teams/$teamId.index";
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
import { Route as DashboardTeamsTeamIdMembersRouteImport } from "./routes/dashboard/teams/$teamId.members";
import { Route as DashboardTeamsTeamIdManageRouteImport } from "./routes/dashboard/teams/$teamId.manage";
<<<<<<< HEAD
import { Route as DashboardCampaignsCampaignIdZeroRouteImport } from "./routes/dashboard/campaigns/$campaignId/zero";
=======
import { Route as DashboardEventsEventIdManageRouteImport } from "./routes/dashboard/events/$eventId.manage";
<<<<<<< HEAD
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
import { ServerRoute as ApiTestSquareServerRouteImport } from "./routes/api/test-square";
>>>>>>> 9097c81 (fix: remove null buyerEmail from Square payment link request)
import { ServerRoute as ApiHealthServerRouteImport } from "./routes/api/health";
import { ServerRoute as ApiDebugSquareServerRouteImport } from "./routes/api/debug-square";
import { ServerRoute as ApiWebhooksSquareServerRouteImport } from "./routes/api/webhooks/square";
import { ServerRoute as ApiTestCleanupServerRouteImport } from "./routes/api/test/cleanup";
import { ServerRoute as ApiSocialUnfollowServerRouteImport } from "./routes/api/social/unfollow";
import { ServerRoute as ApiSocialUnblockServerRouteImport } from "./routes/api/social/unblock";
import { ServerRoute as ApiSocialRelationshipServerRouteImport } from "./routes/api/social/relationship";
import { ServerRoute as ApiSocialFollowServerRouteImport } from "./routes/api/social/follow";
import { ServerRoute as ApiSocialBlocklistServerRouteImport } from "./routes/api/social/blocklist";
import { ServerRoute as ApiSocialBlockServerRouteImport } from "./routes/api/social/block";
import { ServerRoute as ApiAvatarsFileServerRouteImport } from "./routes/api/avatars/$file";
import { ServerRoute as ApiAuthSplatServerRouteImport } from "./routes/api/auth/$";
import { ServerRoute as ApiPaymentsSquareCallbackServerRouteImport } from "./routes/api/payments/square/callback";
import { ServerRoute as ApiAuthActionProviderServerRouteImport } from "./routes/api/auth/$action/$provider";

const rootServerRouteImport = createServerRootRoute();

<<<<<<< HEAD
const SearchRoute = SearchRouteImport.update({
  id: "/search",
  path: "/search",
  getParentRoute: () => rootRouteImport,
} as any);
const EventsRoute = EventsRouteImport.update({
  id: "/events",
  path: "/events",
=======
const TeamsRoute = TeamsRouteImport.update({
  id: "/teams",
  path: "/teams",
  getParentRoute: () => rootRouteImport,
} as any);
const ResourcesRoute = ResourcesRouteImport.update({
  id: "/resources",
  path: "/resources",
  getParentRoute: () => rootRouteImport,
} as any);
const DesignSystemRoute = DesignSystemRouteImport.update({
  id: "/design-system",
  path: "/design-system",
  getParentRoute: () => rootRouteImport,
} as any);
const AboutRoute = AboutRouteImport.update({
  id: "/about",
  path: "/about",
>>>>>>> 6c60748 (feat: integrate Vite PWA plugin and enhance app manifest)
  getParentRoute: () => rootRouteImport,
} as any);
const OnboardingRouteRoute = OnboardingRouteRouteImport.update({
  id: "/onboarding",
  path: "/onboarding",
  getParentRoute: () => rootRouteImport,
} as any);
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: "/dashboard",
  path: "/dashboard",
  getParentRoute: () => rootRouteImport,
} as any);
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: "/auth",
  path: "/auth",
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);
const SystemsIndexRoute = SystemsIndexRouteImport.update({
  id: "/systems/",
  path: "/systems/",
  getParentRoute: () => rootRouteImport,
} as any);
const OnboardingIndexRoute = OnboardingIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => OnboardingRouteRoute,
} as any);
const EventsIndexRoute = EventsIndexRouteImport.update({
  id: "/events/",
  path: "/events/",
  getParentRoute: () => rootRouteImport,
} as any);
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => DashboardRouteRoute,
} as any);
<<<<<<< HEAD
const SystemsSlugRoute = SystemsSlugRouteImport.update({
  id: "/systems/$slug",
  path: "/systems/$slug",
  getParentRoute: () => rootRouteImport,
} as any);
const GameGameIdRoute = GameGameIdRouteImport.update({
  id: "/game/$gameId",
  path: "/game/$gameId",
  getParentRoute: () => rootRouteImport,
} as any);
const EventEventIdRoute = EventEventIdRouteImport.update({
  id: "/event/$eventId",
  path: "/event/$eventId",
=======
const EventsSlugRoute = EventsSlugRouteImport.update({
  id: "/events/$slug",
  path: "/events/$slug",
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
  getParentRoute: () => rootRouteImport,
} as any);
const DashboardTeamsRoute = DashboardTeamsRouteImport.update({
  id: "/teams",
  path: "/teams",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const DashboardSystemsRoute = DashboardSystemsRouteImport.update({
  id: "/systems",
  path: "/systems",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const DashboardSocialAuditsRoute = DashboardSocialAuditsRouteImport.update({
  id: "/social-audits",
  path: "/social-audits",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const DashboardSettingsRoute = DashboardSettingsRouteImport.update({
  id: "/settings",
  path: "/settings",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const DashboardReportsRoute = DashboardReportsRouteImport.update({
  id: "/reports",
  path: "/reports",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const DashboardProfileRoute = DashboardProfileRouteImport.update({
  id: "/profile",
  path: "/profile",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const DashboardMembershipRoute = DashboardMembershipRouteImport.update({
  id: "/membership",
  path: "/membership",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const DashboardMembersRoute = DashboardMembersRouteImport.update({
  id: "/members",
  path: "/members",
  getParentRoute: () => DashboardRouteRoute,
} as any);
<<<<<<< HEAD
<<<<<<< HEAD
const DashboardGamesRoute = DashboardGamesRouteImport.update({
  id: "/games",
  path: "/games",
=======
=======
const DashboardGamesRoute = DashboardGamesRouteImport.update({
  id: "/games",
  path: "/games",
  getParentRoute: () => DashboardRouteRoute,
} as any);
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
const DashboardForbiddenRoute = DashboardForbiddenRouteImport.update({
  id: "/forbidden",
  path: "/forbidden",
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
  getParentRoute: () => DashboardRouteRoute,
} as any);
const DashboardEventsRoute = DashboardEventsRouteImport.update({
  id: "/events",
  path: "/events",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const DashboardCampaignsRoute = DashboardCampaignsRouteImport.update({
  id: "/campaigns",
  path: "/campaigns",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => AuthRouteRoute,
} as any);
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: "/reset-password",
  path: "/reset-password",
  getParentRoute: () => AuthRouteRoute,
} as any);
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => AuthRouteRoute,
} as any);
<<<<<<< HEAD
<<<<<<< HEAD
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: "/forgot-password",
  path: "/forgot-password",
  getParentRoute: () => AuthRouteRoute,
} as any);
const DevEmailIndexRoute = DevEmailIndexRouteImport.update({
  id: "/dev/email/",
  path: "/dev/email/",
=======
=======
const AdminRolesRoute = AdminRolesRouteImport.update({
  id: "/admin/roles",
  path: "/admin/roles",
  getParentRoute: () => rootRouteImport,
} as any);
>>>>>>> 6d449f5 (feat: implement role management dashboard and associated functionality)
const AdminEventsReviewRoute = AdminEventsReviewRouteImport.update({
  id: "/admin/events-review",
  path: "/admin/events-review",
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
  getParentRoute: () => rootRouteImport,
} as any);
const DashboardAdminRouteRoute = DashboardAdminRouteRouteImport.update({
  id: "/admin",
  path: "/admin",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const EventsSlugIndexRoute = EventsSlugIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => EventsSlugRoute,
} as any);
const DashboardTeamsIndexRoute = DashboardTeamsIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => DashboardTeamsRoute,
} as any);
<<<<<<< HEAD
<<<<<<< HEAD
const DashboardSystemsIndexRoute = DashboardSystemsIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => DashboardSystemsRoute,
} as any);
const DashboardProfileIndexRoute = DashboardProfileIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => DashboardProfileRoute,
} as any);
const DashboardGamesIndexRoute = DashboardGamesIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => DashboardGamesRoute,
} as any);
=======
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
const DashboardGamesIndexRoute = DashboardGamesIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => DashboardGamesRoute,
} as any);
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
const DashboardEventsIndexRoute = DashboardEventsIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => DashboardEventsRoute,
} as any);
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 2c22514 (feat: added baseline campaign functionality, based on games)
const DashboardCampaignsIndexRoute = DashboardCampaignsIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => DashboardCampaignsRoute,
} as any);
<<<<<<< HEAD
const DevEmailTemplateRoute = DevEmailTemplateRouteImport.update({
  id: "/dev/email/$template",
  path: "/dev/email/$template",
  getParentRoute: () => rootRouteImport,
=======
=======
>>>>>>> 2c22514 (feat: added baseline campaign functionality, based on games)
const EventsSlugRegisterRoute = EventsSlugRegisterRouteImport.update({
  id: "/register",
  path: "/register",
  getParentRoute: () => EventsSlugRoute,
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
} as any);
const DashboardTeamsCreateRoute = DashboardTeamsCreateRouteImport.update({
  id: "/create",
  path: "/create",
  getParentRoute: () => DashboardTeamsRoute,
} as any);
const DashboardTeamsBrowseRoute = DashboardTeamsBrowseRouteImport.update({
  id: "/browse",
  path: "/browse",
  getParentRoute: () => DashboardTeamsRoute,
} as any);
const DashboardTeamsTeamIdRoute = DashboardTeamsTeamIdRouteImport.update({
  id: "/$teamId",
  path: "/$teamId",
  getParentRoute: () => DashboardTeamsRoute,
} as any);
<<<<<<< HEAD
<<<<<<< HEAD
const DashboardSystemsSystemIdRoute =
  DashboardSystemsSystemIdRouteImport.update({
    id: "/$systemId",
    path: "/$systemId",
    getParentRoute: () => DashboardSystemsRoute,
  } as any);
const DashboardReviewsPendingRoute = DashboardReviewsPendingRouteImport.update({
  id: "/reviews/pending",
  path: "/reviews/pending",
  getParentRoute: () => DashboardRouteRoute,
} as any);
const DashboardProfileBlocklistRoute =
  DashboardProfileBlocklistRouteImport.update({
    id: "/blocklist",
    path: "/blocklist",
    getParentRoute: () => DashboardProfileRoute,
  } as any);
const DashboardProfileUserIdRoute = DashboardProfileUserIdRouteImport.update({
  id: "/$userId",
  path: "/$userId",
  getParentRoute: () => DashboardProfileRoute,
} as any);
const DashboardGamesCreateRoute = DashboardGamesCreateRouteImport.update({
  id: "/create",
  path: "/create",
  getParentRoute: () => DashboardGamesRoute,
} as any);
const DashboardGamesGameIdRoute = DashboardGamesGameIdRouteImport.update({
  id: "/$gameId",
  path: "/$gameId",
  getParentRoute: () => DashboardGamesRoute,
} as any);
=======
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
const DashboardGamesCreateRoute = DashboardGamesCreateRouteImport.update({
  id: "/create",
  path: "/create",
  getParentRoute: () => DashboardGamesRoute,
} as any);
const DashboardGamesGameIdRoute = DashboardGamesGameIdRouteImport.update({
  id: "/$gameId",
  path: "/$gameId",
  getParentRoute: () => DashboardGamesRoute,
} as any);
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
const DashboardEventsCreateRoute = DashboardEventsCreateRouteImport.update({
  id: "/create",
  path: "/create",
  getParentRoute: () => DashboardEventsRoute,
} as any);
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
const DashboardEventsEventIdRoute = DashboardEventsEventIdRouteImport.update({
  id: "/$eventId",
  path: "/$eventId",
  getParentRoute: () => DashboardEventsRoute,
} as any);
=======
>>>>>>> 2c22514 (feat: added baseline campaign functionality, based on games)
const DashboardCampaignsCreateRoute =
  DashboardCampaignsCreateRouteImport.update({
    id: "/create",
    path: "/create",
    getParentRoute: () => DashboardCampaignsRoute,
  } as any);
const DashboardCampaignsCampaignIdRoute =
  DashboardCampaignsCampaignIdRouteImport.update({
    id: "/$campaignId",
    path: "/$campaignId",
    getParentRoute: () => DashboardCampaignsRoute,
  } as any);
<<<<<<< HEAD
=======
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
=======
>>>>>>> 2c22514 (feat: added baseline campaign functionality, based on games)
const DashboardAdminRolesRoute = DashboardAdminRolesRouteImport.update({
  id: "/roles",
  path: "/roles",
  getParentRoute: () => DashboardAdminRouteRoute,
} as any);
const DashboardAdminEventsReviewRoute =
  DashboardAdminEventsReviewRouteImport.update({
    id: "/events-review",
    path: "/events-review",
    getParentRoute: () => DashboardAdminRouteRoute,
  } as any);
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
=======
const DashboardGamesGameIdRouteRoute =
  DashboardGamesGameIdRouteRouteImport.update({
    id: "/games/$gameId",
    path: "/games/$gameId",
    getParentRoute: () => DashboardRouteRoute,
  } as any);
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
const DashboardTeamsTeamIdIndexRoute =
  DashboardTeamsTeamIdIndexRouteImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => DashboardTeamsTeamIdRoute,
  } as any);
<<<<<<< HEAD
<<<<<<< HEAD
const DashboardCampaignsCampaignIdIndexRoute =
  DashboardCampaignsCampaignIdIndexRouteImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => DashboardCampaignsCampaignIdRoute,
=======
const DashboardGamesGameIdIndexRoute =
  DashboardGamesGameIdIndexRouteImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => DashboardGamesGameIdRouteRoute,
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
  } as any);
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
const DashboardTeamsTeamIdMembersRoute =
  DashboardTeamsTeamIdMembersRouteImport.update({
    id: "/members",
    path: "/members",
    getParentRoute: () => DashboardTeamsTeamIdRoute,
  } as any);
const DashboardTeamsTeamIdManageRoute =
  DashboardTeamsTeamIdManageRouteImport.update({
    id: "/manage",
    path: "/manage",
    getParentRoute: () => DashboardTeamsTeamIdRoute,
  } as any);
<<<<<<< HEAD
const DashboardCampaignsCampaignIdZeroRoute =
  DashboardCampaignsCampaignIdZeroRouteImport.update({
    id: "/zero",
    path: "/zero",
    getParentRoute: () => DashboardCampaignsCampaignIdRoute,
=======
const DashboardEventsEventIdManageRoute =
  DashboardEventsEventIdManageRouteImport.update({
    id: "/$eventId/manage",
    path: "/$eventId/manage",
    getParentRoute: () => DashboardEventsRoute,
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
  } as any);
const ApiTestSquareServerRoute = ApiTestSquareServerRouteImport.update({
  id: "/api/test-square",
  path: "/api/test-square",
  getParentRoute: () => rootServerRouteImport,
} as any);
const ApiHealthServerRoute = ApiHealthServerRouteImport.update({
  id: "/api/health",
  path: "/api/health",
  getParentRoute: () => rootServerRouteImport,
} as any);
const ApiDebugSquareServerRoute = ApiDebugSquareServerRouteImport.update({
  id: "/api/debug-square",
  path: "/api/debug-square",
  getParentRoute: () => rootServerRouteImport,
} as any);
const ApiWebhooksSquareServerRoute = ApiWebhooksSquareServerRouteImport.update({
  id: "/api/webhooks/square",
  path: "/api/webhooks/square",
  getParentRoute: () => rootServerRouteImport,
} as any);
const ApiTestCleanupServerRoute = ApiTestCleanupServerRouteImport.update({
  id: "/api/test/cleanup",
  path: "/api/test/cleanup",
  getParentRoute: () => rootServerRouteImport,
} as any);
const ApiSocialUnfollowServerRoute = ApiSocialUnfollowServerRouteImport.update({
  id: "/api/social/unfollow",
  path: "/api/social/unfollow",
  getParentRoute: () => rootServerRouteImport,
} as any);
const ApiSocialUnblockServerRoute = ApiSocialUnblockServerRouteImport.update({
  id: "/api/social/unblock",
  path: "/api/social/unblock",
  getParentRoute: () => rootServerRouteImport,
} as any);
const ApiSocialRelationshipServerRoute =
  ApiSocialRelationshipServerRouteImport.update({
    id: "/api/social/relationship",
    path: "/api/social/relationship",
    getParentRoute: () => rootServerRouteImport,
  } as any);
const ApiSocialFollowServerRoute = ApiSocialFollowServerRouteImport.update({
  id: "/api/social/follow",
  path: "/api/social/follow",
  getParentRoute: () => rootServerRouteImport,
} as any);
const ApiSocialBlocklistServerRoute =
  ApiSocialBlocklistServerRouteImport.update({
    id: "/api/social/blocklist",
    path: "/api/social/blocklist",
    getParentRoute: () => rootServerRouteImport,
  } as any);
const ApiSocialBlockServerRoute = ApiSocialBlockServerRouteImport.update({
  id: "/api/social/block",
  path: "/api/social/block",
  getParentRoute: () => rootServerRouteImport,
} as any);
const ApiAvatarsFileServerRoute = ApiAvatarsFileServerRouteImport.update({
  id: "/api/avatars/$file",
  path: "/api/avatars/$file",
  getParentRoute: () => rootServerRouteImport,
} as any);
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: "/api/auth/$",
  path: "/api/auth/$",
  getParentRoute: () => rootServerRouteImport,
} as any);
const ApiPaymentsSquareCallbackServerRoute =
  ApiPaymentsSquareCallbackServerRouteImport.update({
    id: "/api/payments/square/callback",
    path: "/api/payments/square/callback",
    getParentRoute: () => rootServerRouteImport,
  } as any);
const ApiAuthActionProviderServerRoute =
  ApiAuthActionProviderServerRouteImport.update({
    id: "/api/auth/$action/$provider",
    path: "/api/auth/$action/$provider",
    getParentRoute: () => rootServerRouteImport,
  } as any);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/auth": typeof AuthRouteRouteWithChildren;
  "/dashboard": typeof DashboardRouteRouteWithChildren;
  "/onboarding": typeof OnboardingRouteRouteWithChildren;
<<<<<<< HEAD
<<<<<<< HEAD
  "/events": typeof EventsRoute;
  "/search": typeof SearchRoute;
  "/auth/forgot-password": typeof AuthForgotPasswordRoute;
=======
=======
  "/about": typeof AboutRoute;
  "/design-system": typeof DesignSystemRoute;
  "/resources": typeof ResourcesRoute;
  "/teams": typeof TeamsRoute;
<<<<<<< HEAD
>>>>>>> 6c60748 (feat: integrate Vite PWA plugin and enhance app manifest)
=======
  "/dashboard/admin": typeof DashboardAdminRouteRouteWithChildren;
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
  "/admin/events-review": typeof AdminEventsReviewRoute;
<<<<<<< HEAD
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
  "/admin/roles": typeof AdminRolesRoute;
>>>>>>> 6d449f5 (feat: implement role management dashboard and associated functionality)
  "/auth/login": typeof AuthLoginRoute;
  "/auth/reset-password": typeof AuthResetPasswordRoute;
  "/auth/signup": typeof AuthSignupRoute;
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 2c22514 (feat: added baseline campaign functionality, based on games)
  "/dashboard/campaigns": typeof DashboardCampaignsRouteWithChildren;
  "/dashboard/events": typeof DashboardEventsRouteWithChildren;
<<<<<<< HEAD
  "/dashboard/games": typeof DashboardGamesRouteWithChildren;
=======
  "/dashboard/events": typeof DashboardEventsRouteWithChildren;
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
  "/dashboard/forbidden": typeof DashboardForbiddenRoute;
<<<<<<< HEAD
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
=======
  "/dashboard/games": typeof DashboardGamesRouteWithChildren;
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
  "/dashboard/members": typeof DashboardMembersRoute;
  "/dashboard/membership": typeof DashboardMembershipRoute;
  "/dashboard/profile": typeof DashboardProfileRouteWithChildren;
  "/dashboard/reports": typeof DashboardReportsRoute;
  "/dashboard/settings": typeof DashboardSettingsRoute;
  "/dashboard/social-audits": typeof DashboardSocialAuditsRoute;
  "/dashboard/systems": typeof DashboardSystemsRouteWithChildren;
  "/dashboard/teams": typeof DashboardTeamsRouteWithChildren;
<<<<<<< HEAD
  "/event/$eventId": typeof EventEventIdRoute;
  "/game/$gameId": typeof GameGameIdRoute;
  "/systems/$slug": typeof SystemsSlugRoute;
  "/dashboard/": typeof DashboardIndexRoute;
  "/onboarding/": typeof OnboardingIndexRoute;
  "/systems": typeof SystemsIndexRoute;
  "/dashboard/campaigns/$campaignId": typeof DashboardCampaignsCampaignIdRouteWithChildren;
  "/dashboard/campaigns/create": typeof DashboardCampaignsCreateRoute;
  "/dashboard/events/$eventId": typeof DashboardEventsEventIdRoute;
  "/dashboard/events/create": typeof DashboardEventsCreateRoute;
  "/dashboard/games/$gameId": typeof DashboardGamesGameIdRoute;
  "/dashboard/games/create": typeof DashboardGamesCreateRoute;
  "/dashboard/profile/$userId": typeof DashboardProfileUserIdRoute;
  "/dashboard/profile/blocklist": typeof DashboardProfileBlocklistRoute;
  "/dashboard/reviews/pending": typeof DashboardReviewsPendingRoute;
  "/dashboard/systems/$systemId": typeof DashboardSystemsSystemIdRoute;
  "/dashboard/teams/$teamId": typeof DashboardTeamsTeamIdRouteWithChildren;
  "/dashboard/teams/browse": typeof DashboardTeamsBrowseRoute;
  "/dashboard/teams/create": typeof DashboardTeamsCreateRoute;
  "/dev/email/$template": typeof DevEmailTemplateRoute;
  "/dashboard/campaigns/": typeof DashboardCampaignsIndexRoute;
  "/dashboard/events/": typeof DashboardEventsIndexRoute;
  "/dashboard/games/": typeof DashboardGamesIndexRoute;
  "/dashboard/profile/": typeof DashboardProfileIndexRoute;
  "/dashboard/systems/": typeof DashboardSystemsIndexRoute;
  "/dashboard/teams/": typeof DashboardTeamsIndexRoute;
  "/dev/email": typeof DevEmailIndexRoute;
  "/dashboard/campaigns/$campaignId/zero": typeof DashboardCampaignsCampaignIdZeroRoute;
=======
  "/events/$slug": typeof EventsSlugRouteWithChildren;
  "/dashboard/": typeof DashboardIndexRoute;
  "/events": typeof EventsIndexRoute;
  "/onboarding/": typeof OnboardingIndexRoute;
  "/dashboard/admin/events-review": typeof DashboardAdminEventsReviewRoute;
  "/dashboard/admin/roles": typeof DashboardAdminRolesRoute;
  "/dashboard/campaigns/$campaignId": typeof DashboardCampaignsCampaignIdRoute;
  "/dashboard/campaigns/create": typeof DashboardCampaignsCreateRoute;
  "/dashboard/events/create": typeof DashboardEventsCreateRoute;
  "/dashboard/games/$gameId": typeof DashboardGamesGameIdRoute;
  "/dashboard/games/create": typeof DashboardGamesCreateRoute;
  "/dashboard/teams/$teamId": typeof DashboardTeamsTeamIdRouteWithChildren;
  "/dashboard/teams/browse": typeof DashboardTeamsBrowseRoute;
  "/dashboard/teams/create": typeof DashboardTeamsCreateRoute;
  "/events/$slug/register": typeof EventsSlugRegisterRoute;
  "/dashboard/campaigns/": typeof DashboardCampaignsIndexRoute;
  "/dashboard/events/": typeof DashboardEventsIndexRoute;
  "/dashboard/games/": typeof DashboardGamesIndexRoute;
  "/dashboard/teams/": typeof DashboardTeamsIndexRoute;
  "/events/$slug/": typeof EventsSlugIndexRoute;
  "/dashboard/events/$eventId/manage": typeof DashboardEventsEventIdManageRoute;
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
  "/dashboard/teams/$teamId/manage": typeof DashboardTeamsTeamIdManageRoute;
  "/dashboard/teams/$teamId/members": typeof DashboardTeamsTeamIdMembersRoute;
<<<<<<< HEAD
<<<<<<< HEAD
  "/dashboard/campaigns/$campaignId/": typeof DashboardCampaignsCampaignIdIndexRoute;
=======
  "/dashboard/games/$gameId/": typeof DashboardGamesGameIdIndexRoute;
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
  "/dashboard/teams/$teamId/": typeof DashboardTeamsTeamIdIndexRoute;
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/auth": typeof AuthRouteRouteWithChildren;
<<<<<<< HEAD
<<<<<<< HEAD
  "/events": typeof EventsRoute;
  "/search": typeof SearchRoute;
  "/auth/forgot-password": typeof AuthForgotPasswordRoute;
=======
=======
  "/about": typeof AboutRoute;
  "/design-system": typeof DesignSystemRoute;
  "/resources": typeof ResourcesRoute;
  "/teams": typeof TeamsRoute;
<<<<<<< HEAD
>>>>>>> 6c60748 (feat: integrate Vite PWA plugin and enhance app manifest)
=======
  "/dashboard/admin": typeof DashboardAdminRouteRouteWithChildren;
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
  "/admin/events-review": typeof AdminEventsReviewRoute;
<<<<<<< HEAD
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
  "/admin/roles": typeof AdminRolesRoute;
>>>>>>> 6d449f5 (feat: implement role management dashboard and associated functionality)
  "/auth/login": typeof AuthLoginRoute;
  "/auth/reset-password": typeof AuthResetPasswordRoute;
  "/auth/signup": typeof AuthSignupRoute;
  "/dashboard/forbidden": typeof DashboardForbiddenRoute;
  "/dashboard/members": typeof DashboardMembersRoute;
  "/dashboard/membership": typeof DashboardMembershipRoute;
  "/dashboard/reports": typeof DashboardReportsRoute;
  "/dashboard/settings": typeof DashboardSettingsRoute;
<<<<<<< HEAD
<<<<<<< HEAD
  "/dashboard/social-audits": typeof DashboardSocialAuditsRoute;
  "/event/$eventId": typeof EventEventIdRoute;
  "/game/$gameId": typeof GameGameIdRoute;
  "/systems/$slug": typeof SystemsSlugRoute;
  "/dashboard": typeof DashboardIndexRoute;
  "/onboarding": typeof OnboardingIndexRoute;
  "/systems": typeof SystemsIndexRoute;
  "/dashboard/campaigns/create": typeof DashboardCampaignsCreateRoute;
  "/dashboard/events/$eventId": typeof DashboardEventsEventIdRoute;
  "/dashboard/events/create": typeof DashboardEventsCreateRoute;
  "/dashboard/games/$gameId": typeof DashboardGamesGameIdRoute;
  "/dashboard/games/create": typeof DashboardGamesCreateRoute;
  "/dashboard/profile/$userId": typeof DashboardProfileUserIdRoute;
  "/dashboard/profile/blocklist": typeof DashboardProfileBlocklistRoute;
  "/dashboard/reviews/pending": typeof DashboardReviewsPendingRoute;
  "/dashboard/systems/$systemId": typeof DashboardSystemsSystemIdRoute;
  "/dashboard/teams/browse": typeof DashboardTeamsBrowseRoute;
  "/dashboard/teams/create": typeof DashboardTeamsCreateRoute;
  "/dev/email/$template": typeof DevEmailTemplateRoute;
  "/dashboard/campaigns": typeof DashboardCampaignsIndexRoute;
  "/dashboard/events": typeof DashboardEventsIndexRoute;
  "/dashboard/games": typeof DashboardGamesIndexRoute;
  "/dashboard/profile": typeof DashboardProfileIndexRoute;
  "/dashboard/systems": typeof DashboardSystemsIndexRoute;
  "/dashboard/teams": typeof DashboardTeamsIndexRoute;
  "/dev/email": typeof DevEmailIndexRoute;
  "/dashboard/campaigns/$campaignId/zero": typeof DashboardCampaignsCampaignIdZeroRoute;
=======
  "/events/$slug": typeof EventsSlugRouteWithChildren;
=======
>>>>>>> 877a7a5 (fix: resolve registration route not rendering in production)
  "/dashboard": typeof DashboardIndexRoute;
  "/events": typeof EventsIndexRoute;
  "/onboarding": typeof OnboardingIndexRoute;
  "/dashboard/admin/events-review": typeof DashboardAdminEventsReviewRoute;
  "/dashboard/admin/roles": typeof DashboardAdminRolesRoute;
  "/dashboard/campaigns/$campaignId": typeof DashboardCampaignsCampaignIdRoute;
  "/dashboard/campaigns/create": typeof DashboardCampaignsCreateRoute;
  "/dashboard/events/create": typeof DashboardEventsCreateRoute;
  "/dashboard/games/$gameId": typeof DashboardGamesGameIdRoute;
  "/dashboard/games/create": typeof DashboardGamesCreateRoute;
  "/dashboard/teams/browse": typeof DashboardTeamsBrowseRoute;
  "/dashboard/teams/create": typeof DashboardTeamsCreateRoute;
  "/events/$slug/register": typeof EventsSlugRegisterRoute;
  "/dashboard/campaigns": typeof DashboardCampaignsIndexRoute;
  "/dashboard/events": typeof DashboardEventsIndexRoute;
  "/dashboard/games": typeof DashboardGamesIndexRoute;
  "/dashboard/teams": typeof DashboardTeamsIndexRoute;
  "/events/$slug": typeof EventsSlugIndexRoute;
  "/dashboard/events/$eventId/manage": typeof DashboardEventsEventIdManageRoute;
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
  "/dashboard/teams/$teamId/manage": typeof DashboardTeamsTeamIdManageRoute;
  "/dashboard/teams/$teamId/members": typeof DashboardTeamsTeamIdMembersRoute;
<<<<<<< HEAD
<<<<<<< HEAD
  "/dashboard/campaigns/$campaignId": typeof DashboardCampaignsCampaignIdIndexRoute;
=======
  "/dashboard/games/$gameId": typeof DashboardGamesGameIdIndexRoute;
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
  "/dashboard/teams/$teamId": typeof DashboardTeamsTeamIdIndexRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexRoute;
  "/auth": typeof AuthRouteRouteWithChildren;
  "/dashboard": typeof DashboardRouteRouteWithChildren;
  "/onboarding": typeof OnboardingRouteRouteWithChildren;
<<<<<<< HEAD
<<<<<<< HEAD
  "/events": typeof EventsRoute;
  "/search": typeof SearchRoute;
  "/auth/forgot-password": typeof AuthForgotPasswordRoute;
=======
=======
  "/about": typeof AboutRoute;
  "/design-system": typeof DesignSystemRoute;
  "/resources": typeof ResourcesRoute;
  "/teams": typeof TeamsRoute;
<<<<<<< HEAD
>>>>>>> 6c60748 (feat: integrate Vite PWA plugin and enhance app manifest)
=======
  "/dashboard/admin": typeof DashboardAdminRouteRouteWithChildren;
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
  "/admin/events-review": typeof AdminEventsReviewRoute;
<<<<<<< HEAD
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
  "/admin/roles": typeof AdminRolesRoute;
>>>>>>> 6d449f5 (feat: implement role management dashboard and associated functionality)
  "/auth/login": typeof AuthLoginRoute;
  "/auth/reset-password": typeof AuthResetPasswordRoute;
  "/auth/signup": typeof AuthSignupRoute;
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 2c22514 (feat: added baseline campaign functionality, based on games)
  "/dashboard/campaigns": typeof DashboardCampaignsRouteWithChildren;
  "/dashboard/events": typeof DashboardEventsRouteWithChildren;
<<<<<<< HEAD
  "/dashboard/games": typeof DashboardGamesRouteWithChildren;
=======
  "/dashboard/events": typeof DashboardEventsRouteWithChildren;
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
  "/dashboard/forbidden": typeof DashboardForbiddenRoute;
<<<<<<< HEAD
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
=======
  "/dashboard/games": typeof DashboardGamesRouteWithChildren;
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
  "/dashboard/members": typeof DashboardMembersRoute;
  "/dashboard/membership": typeof DashboardMembershipRoute;
  "/dashboard/profile": typeof DashboardProfileRouteWithChildren;
  "/dashboard/reports": typeof DashboardReportsRoute;
  "/dashboard/settings": typeof DashboardSettingsRoute;
  "/dashboard/social-audits": typeof DashboardSocialAuditsRoute;
  "/dashboard/systems": typeof DashboardSystemsRouteWithChildren;
  "/dashboard/teams": typeof DashboardTeamsRouteWithChildren;
<<<<<<< HEAD
  "/event/$eventId": typeof EventEventIdRoute;
  "/game/$gameId": typeof GameGameIdRoute;
  "/systems/$slug": typeof SystemsSlugRoute;
  "/dashboard/": typeof DashboardIndexRoute;
  "/onboarding/": typeof OnboardingIndexRoute;
  "/systems/": typeof SystemsIndexRoute;
  "/dashboard/campaigns/$campaignId": typeof DashboardCampaignsCampaignIdRouteWithChildren;
  "/dashboard/campaigns/create": typeof DashboardCampaignsCreateRoute;
  "/dashboard/events/$eventId": typeof DashboardEventsEventIdRoute;
  "/dashboard/events/create": typeof DashboardEventsCreateRoute;
  "/dashboard/games/$gameId": typeof DashboardGamesGameIdRoute;
  "/dashboard/games/create": typeof DashboardGamesCreateRoute;
  "/dashboard/profile/$userId": typeof DashboardProfileUserIdRoute;
  "/dashboard/profile/blocklist": typeof DashboardProfileBlocklistRoute;
  "/dashboard/reviews/pending": typeof DashboardReviewsPendingRoute;
  "/dashboard/systems/$systemId": typeof DashboardSystemsSystemIdRoute;
  "/dashboard/teams/$teamId": typeof DashboardTeamsTeamIdRouteWithChildren;
  "/dashboard/teams/browse": typeof DashboardTeamsBrowseRoute;
  "/dashboard/teams/create": typeof DashboardTeamsCreateRoute;
  "/dev/email/$template": typeof DevEmailTemplateRoute;
  "/dashboard/campaigns/": typeof DashboardCampaignsIndexRoute;
  "/dashboard/events/": typeof DashboardEventsIndexRoute;
  "/dashboard/games/": typeof DashboardGamesIndexRoute;
  "/dashboard/profile/": typeof DashboardProfileIndexRoute;
  "/dashboard/systems/": typeof DashboardSystemsIndexRoute;
  "/dashboard/teams/": typeof DashboardTeamsIndexRoute;
  "/dev/email/": typeof DevEmailIndexRoute;
  "/dashboard/campaigns/$campaignId/zero": typeof DashboardCampaignsCampaignIdZeroRoute;
=======
  "/events/$slug": typeof EventsSlugRouteWithChildren;
  "/dashboard/": typeof DashboardIndexRoute;
  "/events/": typeof EventsIndexRoute;
  "/onboarding/": typeof OnboardingIndexRoute;
  "/dashboard/admin/events-review": typeof DashboardAdminEventsReviewRoute;
  "/dashboard/admin/roles": typeof DashboardAdminRolesRoute;
  "/dashboard/campaigns/$campaignId": typeof DashboardCampaignsCampaignIdRoute;
  "/dashboard/campaigns/create": typeof DashboardCampaignsCreateRoute;
  "/dashboard/events/create": typeof DashboardEventsCreateRoute;
  "/dashboard/games/$gameId": typeof DashboardGamesGameIdRoute;
  "/dashboard/games/create": typeof DashboardGamesCreateRoute;
  "/dashboard/teams/$teamId": typeof DashboardTeamsTeamIdRouteWithChildren;
  "/dashboard/teams/browse": typeof DashboardTeamsBrowseRoute;
  "/dashboard/teams/create": typeof DashboardTeamsCreateRoute;
  "/events/$slug/register": typeof EventsSlugRegisterRoute;
  "/dashboard/campaigns/": typeof DashboardCampaignsIndexRoute;
  "/dashboard/events/": typeof DashboardEventsIndexRoute;
  "/dashboard/games/": typeof DashboardGamesIndexRoute;
  "/dashboard/teams/": typeof DashboardTeamsIndexRoute;
  "/events/$slug/": typeof EventsSlugIndexRoute;
  "/dashboard/events/$eventId/manage": typeof DashboardEventsEventIdManageRoute;
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
  "/dashboard/teams/$teamId/manage": typeof DashboardTeamsTeamIdManageRoute;
  "/dashboard/teams/$teamId/members": typeof DashboardTeamsTeamIdMembersRoute;
<<<<<<< HEAD
<<<<<<< HEAD
  "/dashboard/campaigns/$campaignId/": typeof DashboardCampaignsCampaignIdIndexRoute;
=======
  "/dashboard/games/$gameId/": typeof DashboardGamesGameIdIndexRoute;
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
  "/dashboard/teams/$teamId/": typeof DashboardTeamsTeamIdIndexRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/auth"
    | "/dashboard"
    | "/onboarding"
<<<<<<< HEAD
<<<<<<< HEAD
    | "/events"
    | "/search"
    | "/auth/forgot-password"
=======
=======
    | "/about"
    | "/design-system"
    | "/resources"
    | "/teams"
<<<<<<< HEAD
>>>>>>> 6c60748 (feat: integrate Vite PWA plugin and enhance app manifest)
=======
    | "/dashboard/admin"
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
    | "/admin/events-review"
<<<<<<< HEAD
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
    | "/admin/roles"
>>>>>>> 6d449f5 (feat: implement role management dashboard and associated functionality)
    | "/auth/login"
    | "/auth/reset-password"
    | "/auth/signup"
    | "/dashboard/campaigns"
    | "/dashboard/events"
<<<<<<< HEAD
    | "/dashboard/games"
=======
    | "/dashboard/forbidden"
<<<<<<< HEAD
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
=======
    | "/dashboard/games"
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
    | "/dashboard/members"
    | "/dashboard/membership"
    | "/dashboard/profile"
    | "/dashboard/reports"
    | "/dashboard/settings"
    | "/dashboard/social-audits"
    | "/dashboard/systems"
    | "/dashboard/teams"
<<<<<<< HEAD
    | "/event/$eventId"
    | "/game/$gameId"
    | "/systems/$slug"
    | "/dashboard/"
    | "/onboarding/"
    | "/systems"
    | "/dashboard/campaigns/$campaignId"
    | "/dashboard/campaigns/create"
    | "/dashboard/events/$eventId"
    | "/dashboard/events/create"
    | "/dashboard/games/$gameId"
    | "/dashboard/games/create"
    | "/dashboard/profile/$userId"
    | "/dashboard/profile/blocklist"
    | "/dashboard/reviews/pending"
    | "/dashboard/systems/$systemId"
    | "/dashboard/teams/$teamId"
    | "/dashboard/teams/browse"
    | "/dashboard/teams/create"
    | "/dev/email/$template"
    | "/dashboard/campaigns/"
    | "/dashboard/events/"
    | "/dashboard/games/"
    | "/dashboard/profile/"
    | "/dashboard/systems/"
    | "/dashboard/teams/"
    | "/dev/email"
    | "/dashboard/campaigns/$campaignId/zero"
=======
    | "/events/$slug"
    | "/dashboard/"
    | "/events"
    | "/onboarding/"
    | "/dashboard/admin/events-review"
    | "/dashboard/admin/roles"
    | "/dashboard/campaigns/$campaignId"
    | "/dashboard/campaigns/create"
    | "/dashboard/events/create"
    | "/dashboard/games/$gameId"
    | "/dashboard/games/create"
    | "/dashboard/teams/$teamId"
    | "/dashboard/teams/browse"
    | "/dashboard/teams/create"
    | "/events/$slug/register"
    | "/dashboard/campaigns/"
    | "/dashboard/events/"
    | "/dashboard/games/"
    | "/dashboard/teams/"
    | "/events/$slug/"
    | "/dashboard/events/$eventId/manage"
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
    | "/dashboard/teams/$teamId/manage"
    | "/dashboard/teams/$teamId/members"
<<<<<<< HEAD
<<<<<<< HEAD
    | "/dashboard/campaigns/$campaignId/"
=======
    | "/dashboard/games/$gameId/"
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
    | "/dashboard/teams/$teamId/";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/auth"
<<<<<<< HEAD
<<<<<<< HEAD
    | "/events"
    | "/search"
    | "/auth/forgot-password"
=======
=======
    | "/about"
    | "/design-system"
    | "/resources"
    | "/teams"
<<<<<<< HEAD
>>>>>>> 6c60748 (feat: integrate Vite PWA plugin and enhance app manifest)
=======
    | "/dashboard/admin"
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
    | "/admin/events-review"
<<<<<<< HEAD
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
    | "/admin/roles"
>>>>>>> 6d449f5 (feat: implement role management dashboard and associated functionality)
    | "/auth/login"
    | "/auth/reset-password"
    | "/auth/signup"
    | "/dashboard/forbidden"
    | "/dashboard/members"
    | "/dashboard/membership"
    | "/dashboard/reports"
    | "/dashboard/settings"
<<<<<<< HEAD
<<<<<<< HEAD
    | "/dashboard/social-audits"
    | "/event/$eventId"
    | "/game/$gameId"
    | "/systems/$slug"
    | "/dashboard"
    | "/onboarding"
    | "/systems"
    | "/dashboard/campaigns/create"
    | "/dashboard/events/$eventId"
    | "/dashboard/events/create"
    | "/dashboard/games/$gameId"
    | "/dashboard/games/create"
    | "/dashboard/profile/$userId"
    | "/dashboard/profile/blocklist"
    | "/dashboard/reviews/pending"
    | "/dashboard/systems/$systemId"
    | "/dashboard/teams/browse"
    | "/dashboard/teams/create"
    | "/dev/email/$template"
    | "/dashboard/campaigns"
    | "/dashboard/events"
    | "/dashboard/games"
    | "/dashboard/profile"
    | "/dashboard/systems"
    | "/dashboard/teams"
    | "/dev/email"
    | "/dashboard/campaigns/$campaignId/zero"
=======
    | "/events/$slug"
=======
>>>>>>> 877a7a5 (fix: resolve registration route not rendering in production)
    | "/dashboard"
    | "/events"
    | "/onboarding"
    | "/dashboard/admin/events-review"
    | "/dashboard/admin/roles"
    | "/dashboard/campaigns/$campaignId"
    | "/dashboard/campaigns/create"
    | "/dashboard/events/create"
    | "/dashboard/games/$gameId"
    | "/dashboard/games/create"
    | "/dashboard/teams/browse"
    | "/dashboard/teams/create"
    | "/events/$slug/register"
    | "/dashboard/campaigns"
    | "/dashboard/events"
    | "/dashboard/games"
    | "/dashboard/teams"
    | "/events/$slug"
    | "/dashboard/events/$eventId/manage"
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
    | "/dashboard/teams/$teamId/manage"
    | "/dashboard/teams/$teamId/members"
<<<<<<< HEAD
<<<<<<< HEAD
    | "/dashboard/campaigns/$campaignId"
=======
    | "/dashboard/games/$gameId"
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
    | "/dashboard/teams/$teamId";
  id:
    | "__root__"
    | "/"
    | "/auth"
    | "/dashboard"
    | "/onboarding"
<<<<<<< HEAD
<<<<<<< HEAD
    | "/events"
    | "/search"
    | "/auth/forgot-password"
=======
=======
    | "/about"
    | "/design-system"
    | "/resources"
    | "/teams"
<<<<<<< HEAD
>>>>>>> 6c60748 (feat: integrate Vite PWA plugin and enhance app manifest)
=======
    | "/dashboard/admin"
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
    | "/admin/events-review"
<<<<<<< HEAD
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
    | "/admin/roles"
>>>>>>> 6d449f5 (feat: implement role management dashboard and associated functionality)
    | "/auth/login"
    | "/auth/reset-password"
    | "/auth/signup"
    | "/dashboard/campaigns"
    | "/dashboard/events"
<<<<<<< HEAD
    | "/dashboard/games"
=======
    | "/dashboard/forbidden"
<<<<<<< HEAD
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
=======
    | "/dashboard/games"
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
    | "/dashboard/members"
    | "/dashboard/membership"
    | "/dashboard/profile"
    | "/dashboard/reports"
    | "/dashboard/settings"
    | "/dashboard/social-audits"
    | "/dashboard/systems"
    | "/dashboard/teams"
<<<<<<< HEAD
    | "/event/$eventId"
    | "/game/$gameId"
    | "/systems/$slug"
    | "/dashboard/"
    | "/onboarding/"
    | "/systems/"
    | "/dashboard/campaigns/$campaignId"
    | "/dashboard/campaigns/create"
    | "/dashboard/events/$eventId"
    | "/dashboard/events/create"
    | "/dashboard/games/$gameId"
    | "/dashboard/games/create"
    | "/dashboard/profile/$userId"
    | "/dashboard/profile/blocklist"
    | "/dashboard/reviews/pending"
    | "/dashboard/systems/$systemId"
    | "/dashboard/teams/$teamId"
    | "/dashboard/teams/browse"
    | "/dashboard/teams/create"
    | "/dev/email/$template"
    | "/dashboard/campaigns/"
    | "/dashboard/events/"
    | "/dashboard/games/"
    | "/dashboard/profile/"
    | "/dashboard/systems/"
    | "/dashboard/teams/"
    | "/dev/email/"
    | "/dashboard/campaigns/$campaignId/zero"
=======
    | "/events/$slug"
    | "/dashboard/"
    | "/events/"
    | "/onboarding/"
    | "/dashboard/admin/events-review"
    | "/dashboard/admin/roles"
    | "/dashboard/campaigns/$campaignId"
    | "/dashboard/campaigns/create"
    | "/dashboard/events/create"
    | "/dashboard/games/$gameId"
    | "/dashboard/games/create"
    | "/dashboard/teams/$teamId"
    | "/dashboard/teams/browse"
    | "/dashboard/teams/create"
    | "/events/$slug/register"
    | "/dashboard/campaigns/"
    | "/dashboard/events/"
    | "/dashboard/games/"
    | "/dashboard/teams/"
    | "/events/$slug/"
    | "/dashboard/events/$eventId/manage"
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
    | "/dashboard/teams/$teamId/manage"
    | "/dashboard/teams/$teamId/members"
<<<<<<< HEAD
<<<<<<< HEAD
    | "/dashboard/campaigns/$campaignId/"
=======
    | "/dashboard/games/$gameId/"
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
    | "/dashboard/teams/$teamId/";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AuthRouteRoute: typeof AuthRouteRouteWithChildren;
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren;
  OnboardingRouteRoute: typeof OnboardingRouteRouteWithChildren;
<<<<<<< HEAD
<<<<<<< HEAD
  EventsRoute: typeof EventsRoute;
  SearchRoute: typeof SearchRoute;
  EventEventIdRoute: typeof EventEventIdRoute;
  GameGameIdRoute: typeof GameGameIdRoute;
  SystemsSlugRoute: typeof SystemsSlugRoute;
  SystemsIndexRoute: typeof SystemsIndexRoute;
  DevEmailTemplateRoute: typeof DevEmailTemplateRoute;
  DevEmailIndexRoute: typeof DevEmailIndexRoute;
=======
  AdminEventsReviewRoute: typeof AdminEventsReviewRoute;
  AdminRolesRoute: typeof AdminRolesRoute;
  EventsSlugRoute: typeof EventsSlugRouteWithChildren;
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
  AboutRoute: typeof AboutRoute;
  DesignSystemRoute: typeof DesignSystemRoute;
  ResourcesRoute: typeof ResourcesRoute;
  TeamsRoute: typeof TeamsRoute;
  AdminEventsReviewRoute: typeof AdminEventsReviewRoute;
  AdminRolesRoute: typeof AdminRolesRoute;
  EventsSlugRoute: typeof EventsSlugRouteWithChildren;
  EventsIndexRoute: typeof EventsIndexRoute;
>>>>>>> 6c60748 (feat: integrate Vite PWA plugin and enhance app manifest)
}
export interface FileServerRoutesByFullPath {
  "/api/debug-square": typeof ApiDebugSquareServerRoute;
  "/api/health": typeof ApiHealthServerRoute;
  "/api/test-square": typeof ApiTestSquareServerRoute;
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
  "/api/avatars/$file": typeof ApiAvatarsFileServerRoute;
  "/api/social/block": typeof ApiSocialBlockServerRoute;
  "/api/social/blocklist": typeof ApiSocialBlocklistServerRoute;
  "/api/social/follow": typeof ApiSocialFollowServerRoute;
  "/api/social/relationship": typeof ApiSocialRelationshipServerRoute;
  "/api/social/unblock": typeof ApiSocialUnblockServerRoute;
  "/api/social/unfollow": typeof ApiSocialUnfollowServerRoute;
  "/api/test/cleanup": typeof ApiTestCleanupServerRoute;
  "/api/webhooks/square": typeof ApiWebhooksSquareServerRoute;
  "/api/auth/$action/$provider": typeof ApiAuthActionProviderServerRoute;
  "/api/payments/square/callback": typeof ApiPaymentsSquareCallbackServerRoute;
}
export interface FileServerRoutesByTo {
  "/api/debug-square": typeof ApiDebugSquareServerRoute;
  "/api/health": typeof ApiHealthServerRoute;
  "/api/test-square": typeof ApiTestSquareServerRoute;
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
  "/api/avatars/$file": typeof ApiAvatarsFileServerRoute;
  "/api/social/block": typeof ApiSocialBlockServerRoute;
  "/api/social/blocklist": typeof ApiSocialBlocklistServerRoute;
  "/api/social/follow": typeof ApiSocialFollowServerRoute;
  "/api/social/relationship": typeof ApiSocialRelationshipServerRoute;
  "/api/social/unblock": typeof ApiSocialUnblockServerRoute;
  "/api/social/unfollow": typeof ApiSocialUnfollowServerRoute;
  "/api/test/cleanup": typeof ApiTestCleanupServerRoute;
  "/api/webhooks/square": typeof ApiWebhooksSquareServerRoute;
  "/api/auth/$action/$provider": typeof ApiAuthActionProviderServerRoute;
  "/api/payments/square/callback": typeof ApiPaymentsSquareCallbackServerRoute;
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport;
  "/api/debug-square": typeof ApiDebugSquareServerRoute;
  "/api/health": typeof ApiHealthServerRoute;
  "/api/test-square": typeof ApiTestSquareServerRoute;
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
  "/api/avatars/$file": typeof ApiAvatarsFileServerRoute;
  "/api/social/block": typeof ApiSocialBlockServerRoute;
  "/api/social/blocklist": typeof ApiSocialBlocklistServerRoute;
  "/api/social/follow": typeof ApiSocialFollowServerRoute;
  "/api/social/relationship": typeof ApiSocialRelationshipServerRoute;
  "/api/social/unblock": typeof ApiSocialUnblockServerRoute;
  "/api/social/unfollow": typeof ApiSocialUnfollowServerRoute;
  "/api/test/cleanup": typeof ApiTestCleanupServerRoute;
  "/api/webhooks/square": typeof ApiWebhooksSquareServerRoute;
  "/api/auth/$action/$provider": typeof ApiAuthActionProviderServerRoute;
  "/api/payments/square/callback": typeof ApiPaymentsSquareCallbackServerRoute;
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath;
  fullPaths:
    | "/api/debug-square"
    | "/api/health"
    | "/api/test-square"
    | "/api/auth/$"
    | "/api/avatars/$file"
    | "/api/social/block"
    | "/api/social/blocklist"
    | "/api/social/follow"
    | "/api/social/relationship"
    | "/api/social/unblock"
    | "/api/social/unfollow"
    | "/api/test/cleanup"
    | "/api/webhooks/square"
    | "/api/auth/$action/$provider"
    | "/api/payments/square/callback";
  fileServerRoutesByTo: FileServerRoutesByTo;
  to:
    | "/api/debug-square"
    | "/api/health"
    | "/api/test-square"
    | "/api/auth/$"
    | "/api/avatars/$file"
    | "/api/social/block"
    | "/api/social/blocklist"
    | "/api/social/follow"
    | "/api/social/relationship"
    | "/api/social/unblock"
    | "/api/social/unfollow"
    | "/api/test/cleanup"
    | "/api/webhooks/square"
    | "/api/auth/$action/$provider"
    | "/api/payments/square/callback";
  id:
    | "__root__"
    | "/api/debug-square"
    | "/api/health"
    | "/api/test-square"
    | "/api/auth/$"
    | "/api/avatars/$file"
    | "/api/social/block"
    | "/api/social/blocklist"
    | "/api/social/follow"
    | "/api/social/relationship"
    | "/api/social/unblock"
    | "/api/social/unfollow"
    | "/api/test/cleanup"
    | "/api/webhooks/square"
    | "/api/auth/$action/$provider"
    | "/api/payments/square/callback";
  fileServerRoutesById: FileServerRoutesById;
}
export interface RootServerRouteChildren {
  ApiDebugSquareServerRoute: typeof ApiDebugSquareServerRoute;
  ApiHealthServerRoute: typeof ApiHealthServerRoute;
  ApiTestSquareServerRoute: typeof ApiTestSquareServerRoute;
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute;
  ApiAvatarsFileServerRoute: typeof ApiAvatarsFileServerRoute;
  ApiSocialBlockServerRoute: typeof ApiSocialBlockServerRoute;
  ApiSocialBlocklistServerRoute: typeof ApiSocialBlocklistServerRoute;
  ApiSocialFollowServerRoute: typeof ApiSocialFollowServerRoute;
  ApiSocialRelationshipServerRoute: typeof ApiSocialRelationshipServerRoute;
  ApiSocialUnblockServerRoute: typeof ApiSocialUnblockServerRoute;
  ApiSocialUnfollowServerRoute: typeof ApiSocialUnfollowServerRoute;
  ApiTestCleanupServerRoute: typeof ApiTestCleanupServerRoute;
  ApiWebhooksSquareServerRoute: typeof ApiWebhooksSquareServerRoute;
  ApiAuthActionProviderServerRoute: typeof ApiAuthActionProviderServerRoute;
  ApiPaymentsSquareCallbackServerRoute: typeof ApiPaymentsSquareCallbackServerRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
<<<<<<< HEAD
    "/search": {
      id: "/search";
      path: "/search";
      fullPath: "/search";
      preLoaderRoute: typeof SearchRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/events": {
      id: "/events";
      path: "/events";
      fullPath: "/events";
      preLoaderRoute: typeof EventsRouteImport;
=======
    "/teams": {
      id: "/teams";
      path: "/teams";
      fullPath: "/teams";
      preLoaderRoute: typeof TeamsRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/resources": {
      id: "/resources";
      path: "/resources";
      fullPath: "/resources";
      preLoaderRoute: typeof ResourcesRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/design-system": {
      id: "/design-system";
      path: "/design-system";
      fullPath: "/design-system";
      preLoaderRoute: typeof DesignSystemRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/about": {
      id: "/about";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof AboutRouteImport;
>>>>>>> 6c60748 (feat: integrate Vite PWA plugin and enhance app manifest)
      parentRoute: typeof rootRouteImport;
    };
    "/onboarding": {
      id: "/onboarding";
      path: "/onboarding";
      fullPath: "/onboarding";
      preLoaderRoute: typeof OnboardingRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/dashboard": {
      id: "/dashboard";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof DashboardRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/auth": {
      id: "/auth";
      path: "/auth";
      fullPath: "/auth";
      preLoaderRoute: typeof AuthRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/systems/": {
      id: "/systems/";
      path: "/systems";
      fullPath: "/systems";
      preLoaderRoute: typeof SystemsIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/onboarding/": {
      id: "/onboarding/";
      path: "/";
      fullPath: "/onboarding/";
      preLoaderRoute: typeof OnboardingIndexRouteImport;
      parentRoute: typeof OnboardingRouteRoute;
    };
    "/events/": {
      id: "/events/";
      path: "/events";
      fullPath: "/events";
      preLoaderRoute: typeof EventsIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/dashboard/": {
      id: "/dashboard/";
      path: "/";
      fullPath: "/dashboard/";
      preLoaderRoute: typeof DashboardIndexRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
<<<<<<< HEAD
    "/systems/$slug": {
      id: "/systems/$slug";
      path: "/systems/$slug";
      fullPath: "/systems/$slug";
      preLoaderRoute: typeof SystemsSlugRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/game/$gameId": {
      id: "/game/$gameId";
      path: "/game/$gameId";
      fullPath: "/game/$gameId";
      preLoaderRoute: typeof GameGameIdRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/event/$eventId": {
      id: "/event/$eventId";
      path: "/event/$eventId";
      fullPath: "/event/$eventId";
      preLoaderRoute: typeof EventEventIdRouteImport;
=======
    "/events/$slug": {
      id: "/events/$slug";
      path: "/events/$slug";
      fullPath: "/events/$slug";
      preLoaderRoute: typeof EventsSlugRouteImport;
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
      parentRoute: typeof rootRouteImport;
    };
    "/dashboard/teams": {
      id: "/dashboard/teams";
      path: "/teams";
      fullPath: "/dashboard/teams";
      preLoaderRoute: typeof DashboardTeamsRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/dashboard/systems": {
      id: "/dashboard/systems";
      path: "/systems";
      fullPath: "/dashboard/systems";
      preLoaderRoute: typeof DashboardSystemsRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/dashboard/social-audits": {
      id: "/dashboard/social-audits";
      path: "/social-audits";
      fullPath: "/dashboard/social-audits";
      preLoaderRoute: typeof DashboardSocialAuditsRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/dashboard/settings": {
      id: "/dashboard/settings";
      path: "/settings";
      fullPath: "/dashboard/settings";
      preLoaderRoute: typeof DashboardSettingsRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/dashboard/reports": {
      id: "/dashboard/reports";
      path: "/reports";
      fullPath: "/dashboard/reports";
      preLoaderRoute: typeof DashboardReportsRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/dashboard/profile": {
      id: "/dashboard/profile";
      path: "/profile";
      fullPath: "/dashboard/profile";
      preLoaderRoute: typeof DashboardProfileRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/dashboard/membership": {
      id: "/dashboard/membership";
      path: "/membership";
      fullPath: "/dashboard/membership";
      preLoaderRoute: typeof DashboardMembershipRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/dashboard/members": {
      id: "/dashboard/members";
      path: "/members";
      fullPath: "/dashboard/members";
      preLoaderRoute: typeof DashboardMembersRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
    "/dashboard/games": {
      id: "/dashboard/games";
      path: "/games";
      fullPath: "/dashboard/games";
      preLoaderRoute: typeof DashboardGamesRouteImport;
<<<<<<< HEAD
=======
=======
      parentRoute: typeof DashboardRouteRoute;
    };
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
    "/dashboard/forbidden": {
      id: "/dashboard/forbidden";
      path: "/forbidden";
      fullPath: "/dashboard/forbidden";
      preLoaderRoute: typeof DashboardForbiddenRouteImport;
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
      parentRoute: typeof DashboardRouteRoute;
    };
    "/dashboard/events": {
      id: "/dashboard/events";
      path: "/events";
      fullPath: "/dashboard/events";
      preLoaderRoute: typeof DashboardEventsRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/dashboard/campaigns": {
      id: "/dashboard/campaigns";
      path: "/campaigns";
      fullPath: "/dashboard/campaigns";
      preLoaderRoute: typeof DashboardCampaignsRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/auth/signup": {
      id: "/auth/signup";
      path: "/signup";
      fullPath: "/auth/signup";
      preLoaderRoute: typeof AuthSignupRouteImport;
      parentRoute: typeof AuthRouteRoute;
    };
    "/auth/reset-password": {
      id: "/auth/reset-password";
      path: "/reset-password";
      fullPath: "/auth/reset-password";
      preLoaderRoute: typeof AuthResetPasswordRouteImport;
      parentRoute: typeof AuthRouteRoute;
    };
    "/auth/login": {
      id: "/auth/login";
      path: "/login";
      fullPath: "/auth/login";
      preLoaderRoute: typeof AuthLoginRouteImport;
      parentRoute: typeof AuthRouteRoute;
    };
<<<<<<< HEAD
<<<<<<< HEAD
    "/auth/forgot-password": {
      id: "/auth/forgot-password";
      path: "/forgot-password";
      fullPath: "/auth/forgot-password";
      preLoaderRoute: typeof AuthForgotPasswordRouteImport;
      parentRoute: typeof AuthRouteRoute;
    };
    "/dev/email/": {
      id: "/dev/email/";
      path: "/dev/email";
      fullPath: "/dev/email";
      preLoaderRoute: typeof DevEmailIndexRouteImport;
=======
=======
    "/admin/roles": {
      id: "/admin/roles";
      path: "/admin/roles";
      fullPath: "/admin/roles";
      preLoaderRoute: typeof AdminRolesRouteImport;
      parentRoute: typeof rootRouteImport;
    };
>>>>>>> 6d449f5 (feat: implement role management dashboard and associated functionality)
    "/admin/events-review": {
      id: "/admin/events-review";
      path: "/admin/events-review";
      fullPath: "/admin/events-review";
      preLoaderRoute: typeof AdminEventsReviewRouteImport;
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
      parentRoute: typeof rootRouteImport;
    };
    "/dashboard/admin": {
      id: "/dashboard/admin";
      path: "/admin";
      fullPath: "/dashboard/admin";
      preLoaderRoute: typeof DashboardAdminRouteRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/events/$slug/": {
      id: "/events/$slug/";
      path: "/";
      fullPath: "/events/$slug/";
      preLoaderRoute: typeof EventsSlugIndexRouteImport;
      parentRoute: typeof EventsSlugRoute;
    };
    "/dashboard/teams/": {
      id: "/dashboard/teams/";
      path: "/";
      fullPath: "/dashboard/teams/";
      preLoaderRoute: typeof DashboardTeamsIndexRouteImport;
      parentRoute: typeof DashboardTeamsRoute;
    };
<<<<<<< HEAD
<<<<<<< HEAD
    "/dashboard/systems/": {
      id: "/dashboard/systems/";
      path: "/";
      fullPath: "/dashboard/systems/";
      preLoaderRoute: typeof DashboardSystemsIndexRouteImport;
      parentRoute: typeof DashboardSystemsRoute;
    };
    "/dashboard/profile/": {
      id: "/dashboard/profile/";
      path: "/";
      fullPath: "/dashboard/profile/";
      preLoaderRoute: typeof DashboardProfileIndexRouteImport;
      parentRoute: typeof DashboardProfileRoute;
    };
    "/dashboard/games/": {
      id: "/dashboard/games/";
      path: "/";
      fullPath: "/dashboard/games/";
      preLoaderRoute: typeof DashboardGamesIndexRouteImport;
      parentRoute: typeof DashboardGamesRoute;
    };
=======
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
    "/dashboard/games/": {
      id: "/dashboard/games/";
      path: "/";
      fullPath: "/dashboard/games/";
      preLoaderRoute: typeof DashboardGamesIndexRouteImport;
      parentRoute: typeof DashboardGamesRoute;
    };
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
    "/dashboard/events/": {
      id: "/dashboard/events/";
      path: "/";
      fullPath: "/dashboard/events/";
      preLoaderRoute: typeof DashboardEventsIndexRouteImport;
      parentRoute: typeof DashboardEventsRoute;
    };
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 2c22514 (feat: added baseline campaign functionality, based on games)
    "/dashboard/campaigns/": {
      id: "/dashboard/campaigns/";
      path: "/";
      fullPath: "/dashboard/campaigns/";
      preLoaderRoute: typeof DashboardCampaignsIndexRouteImport;
      parentRoute: typeof DashboardCampaignsRoute;
    };
<<<<<<< HEAD
    "/dev/email/$template": {
      id: "/dev/email/$template";
      path: "/dev/email/$template";
      fullPath: "/dev/email/$template";
      preLoaderRoute: typeof DevEmailTemplateRouteImport;
      parentRoute: typeof rootRouteImport;
=======
=======
>>>>>>> 2c22514 (feat: added baseline campaign functionality, based on games)
    "/events/$slug/register": {
      id: "/events/$slug/register";
      path: "/register";
      fullPath: "/events/$slug/register";
      preLoaderRoute: typeof EventsSlugRegisterRouteImport;
      parentRoute: typeof EventsSlugRoute;
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
    };
    "/dashboard/teams/create": {
      id: "/dashboard/teams/create";
      path: "/create";
      fullPath: "/dashboard/teams/create";
      preLoaderRoute: typeof DashboardTeamsCreateRouteImport;
      parentRoute: typeof DashboardTeamsRoute;
    };
    "/dashboard/teams/browse": {
      id: "/dashboard/teams/browse";
      path: "/browse";
      fullPath: "/dashboard/teams/browse";
      preLoaderRoute: typeof DashboardTeamsBrowseRouteImport;
      parentRoute: typeof DashboardTeamsRoute;
    };
    "/dashboard/teams/$teamId": {
      id: "/dashboard/teams/$teamId";
      path: "/$teamId";
      fullPath: "/dashboard/teams/$teamId";
      preLoaderRoute: typeof DashboardTeamsTeamIdRouteImport;
      parentRoute: typeof DashboardTeamsRoute;
    };
<<<<<<< HEAD
<<<<<<< HEAD
    "/dashboard/systems/$systemId": {
      id: "/dashboard/systems/$systemId";
      path: "/$systemId";
      fullPath: "/dashboard/systems/$systemId";
      preLoaderRoute: typeof DashboardSystemsSystemIdRouteImport;
      parentRoute: typeof DashboardSystemsRoute;
    };
    "/dashboard/reviews/pending": {
      id: "/dashboard/reviews/pending";
      path: "/reviews/pending";
      fullPath: "/dashboard/reviews/pending";
      preLoaderRoute: typeof DashboardReviewsPendingRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
    "/dashboard/profile/blocklist": {
      id: "/dashboard/profile/blocklist";
      path: "/blocklist";
      fullPath: "/dashboard/profile/blocklist";
      preLoaderRoute: typeof DashboardProfileBlocklistRouteImport;
      parentRoute: typeof DashboardProfileRoute;
    };
    "/dashboard/profile/$userId": {
      id: "/dashboard/profile/$userId";
      path: "/$userId";
      fullPath: "/dashboard/profile/$userId";
      preLoaderRoute: typeof DashboardProfileUserIdRouteImport;
      parentRoute: typeof DashboardProfileRoute;
    };
    "/dashboard/games/create": {
      id: "/dashboard/games/create";
      path: "/create";
      fullPath: "/dashboard/games/create";
      preLoaderRoute: typeof DashboardGamesCreateRouteImport;
      parentRoute: typeof DashboardGamesRoute;
    };
    "/dashboard/games/$gameId": {
      id: "/dashboard/games/$gameId";
      path: "/$gameId";
      fullPath: "/dashboard/games/$gameId";
      preLoaderRoute: typeof DashboardGamesGameIdRouteImport;
      parentRoute: typeof DashboardGamesRoute;
    };
=======
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
    "/dashboard/games/create": {
      id: "/dashboard/games/create";
      path: "/create";
      fullPath: "/dashboard/games/create";
      preLoaderRoute: typeof DashboardGamesCreateRouteImport;
      parentRoute: typeof DashboardGamesRoute;
    };
    "/dashboard/games/$gameId": {
      id: "/dashboard/games/$gameId";
      path: "/$gameId";
      fullPath: "/dashboard/games/$gameId";
      preLoaderRoute: typeof DashboardGamesGameIdRouteImport;
      parentRoute: typeof DashboardGamesRoute;
    };
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
    "/dashboard/events/create": {
      id: "/dashboard/events/create";
      path: "/create";
      fullPath: "/dashboard/events/create";
      preLoaderRoute: typeof DashboardEventsCreateRouteImport;
      parentRoute: typeof DashboardEventsRoute;
    };
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "/dashboard/events/$eventId": {
      id: "/dashboard/events/$eventId";
      path: "/$eventId";
      fullPath: "/dashboard/events/$eventId";
      preLoaderRoute: typeof DashboardEventsEventIdRouteImport;
      parentRoute: typeof DashboardEventsRoute;
    };
=======
>>>>>>> 2c22514 (feat: added baseline campaign functionality, based on games)
    "/dashboard/campaigns/create": {
      id: "/dashboard/campaigns/create";
      path: "/create";
      fullPath: "/dashboard/campaigns/create";
      preLoaderRoute: typeof DashboardCampaignsCreateRouteImport;
      parentRoute: typeof DashboardCampaignsRoute;
    };
    "/dashboard/campaigns/$campaignId": {
      id: "/dashboard/campaigns/$campaignId";
      path: "/$campaignId";
      fullPath: "/dashboard/campaigns/$campaignId";
      preLoaderRoute: typeof DashboardCampaignsCampaignIdRouteImport;
      parentRoute: typeof DashboardCampaignsRoute;
    };
<<<<<<< HEAD
=======
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
=======
>>>>>>> 2c22514 (feat: added baseline campaign functionality, based on games)
    "/dashboard/admin/roles": {
      id: "/dashboard/admin/roles";
      path: "/roles";
      fullPath: "/dashboard/admin/roles";
      preLoaderRoute: typeof DashboardAdminRolesRouteImport;
      parentRoute: typeof DashboardAdminRouteRoute;
    };
    "/dashboard/admin/events-review": {
      id: "/dashboard/admin/events-review";
      path: "/events-review";
      fullPath: "/dashboard/admin/events-review";
      preLoaderRoute: typeof DashboardAdminEventsReviewRouteImport;
      parentRoute: typeof DashboardAdminRouteRoute;
    };
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
=======
    "/dashboard/games/$gameId": {
      id: "/dashboard/games/$gameId";
      path: "/games/$gameId";
      fullPath: "/dashboard/games/$gameId";
      preLoaderRoute: typeof DashboardGamesGameIdRouteRouteImport;
      parentRoute: typeof DashboardRouteRoute;
    };
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
    "/dashboard/teams/$teamId/": {
      id: "/dashboard/teams/$teamId/";
      path: "/";
      fullPath: "/dashboard/teams/$teamId/";
      preLoaderRoute: typeof DashboardTeamsTeamIdIndexRouteImport;
      parentRoute: typeof DashboardTeamsTeamIdRoute;
    };
<<<<<<< HEAD
<<<<<<< HEAD
    "/dashboard/campaigns/$campaignId/": {
      id: "/dashboard/campaigns/$campaignId/";
      path: "/";
      fullPath: "/dashboard/campaigns/$campaignId/";
      preLoaderRoute: typeof DashboardCampaignsCampaignIdIndexRouteImport;
      parentRoute: typeof DashboardCampaignsCampaignIdRoute;
=======
    "/dashboard/games/$gameId/": {
      id: "/dashboard/games/$gameId/";
      path: "/";
      fullPath: "/dashboard/games/$gameId/";
      preLoaderRoute: typeof DashboardGamesGameIdIndexRouteImport;
      parentRoute: typeof DashboardGamesGameIdRouteRoute;
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
    };
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
    "/dashboard/teams/$teamId/members": {
      id: "/dashboard/teams/$teamId/members";
      path: "/members";
      fullPath: "/dashboard/teams/$teamId/members";
      preLoaderRoute: typeof DashboardTeamsTeamIdMembersRouteImport;
      parentRoute: typeof DashboardTeamsTeamIdRoute;
    };
    "/dashboard/teams/$teamId/manage": {
      id: "/dashboard/teams/$teamId/manage";
      path: "/manage";
      fullPath: "/dashboard/teams/$teamId/manage";
      preLoaderRoute: typeof DashboardTeamsTeamIdManageRouteImport;
      parentRoute: typeof DashboardTeamsTeamIdRoute;
    };
<<<<<<< HEAD
    "/dashboard/campaigns/$campaignId/zero": {
      id: "/dashboard/campaigns/$campaignId/zero";
      path: "/zero";
      fullPath: "/dashboard/campaigns/$campaignId/zero";
      preLoaderRoute: typeof DashboardCampaignsCampaignIdZeroRouteImport;
      parentRoute: typeof DashboardCampaignsCampaignIdRoute;
=======
    "/dashboard/events/$eventId/manage": {
      id: "/dashboard/events/$eventId/manage";
      path: "/$eventId/manage";
      fullPath: "/dashboard/events/$eventId/manage";
      preLoaderRoute: typeof DashboardEventsEventIdManageRouteImport;
      parentRoute: typeof DashboardEventsRoute;
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
    };
  }
}
declare module "@tanstack/react-start/server" {
  interface ServerFileRoutesByPath {
    "/api/test-square": {
      id: "/api/test-square";
      path: "/api/test-square";
      fullPath: "/api/test-square";
      preLoaderRoute: typeof ApiTestSquareServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/health": {
      id: "/api/health";
      path: "/api/health";
      fullPath: "/api/health";
      preLoaderRoute: typeof ApiHealthServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/debug-square": {
      id: "/api/debug-square";
      path: "/api/debug-square";
      fullPath: "/api/debug-square";
      preLoaderRoute: typeof ApiDebugSquareServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/webhooks/square": {
      id: "/api/webhooks/square";
      path: "/api/webhooks/square";
      fullPath: "/api/webhooks/square";
      preLoaderRoute: typeof ApiWebhooksSquareServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/test/cleanup": {
      id: "/api/test/cleanup";
      path: "/api/test/cleanup";
      fullPath: "/api/test/cleanup";
      preLoaderRoute: typeof ApiTestCleanupServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/social/unfollow": {
      id: "/api/social/unfollow";
      path: "/api/social/unfollow";
      fullPath: "/api/social/unfollow";
      preLoaderRoute: typeof ApiSocialUnfollowServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/social/unblock": {
      id: "/api/social/unblock";
      path: "/api/social/unblock";
      fullPath: "/api/social/unblock";
      preLoaderRoute: typeof ApiSocialUnblockServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/social/relationship": {
      id: "/api/social/relationship";
      path: "/api/social/relationship";
      fullPath: "/api/social/relationship";
      preLoaderRoute: typeof ApiSocialRelationshipServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/social/follow": {
      id: "/api/social/follow";
      path: "/api/social/follow";
      fullPath: "/api/social/follow";
      preLoaderRoute: typeof ApiSocialFollowServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/social/blocklist": {
      id: "/api/social/blocklist";
      path: "/api/social/blocklist";
      fullPath: "/api/social/blocklist";
      preLoaderRoute: typeof ApiSocialBlocklistServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/social/block": {
      id: "/api/social/block";
      path: "/api/social/block";
      fullPath: "/api/social/block";
      preLoaderRoute: typeof ApiSocialBlockServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/avatars/$file": {
      id: "/api/avatars/$file";
      path: "/api/avatars/$file";
      fullPath: "/api/avatars/$file";
      preLoaderRoute: typeof ApiAvatarsFileServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/auth/$": {
      id: "/api/auth/$";
      path: "/api/auth/$";
      fullPath: "/api/auth/$";
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/payments/square/callback": {
      id: "/api/payments/square/callback";
      path: "/api/payments/square/callback";
      fullPath: "/api/payments/square/callback";
      preLoaderRoute: typeof ApiPaymentsSquareCallbackServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/auth/$action/$provider": {
      id: "/api/auth/$action/$provider";
      path: "/api/auth/$action/$provider";
      fullPath: "/api/auth/$action/$provider";
      preLoaderRoute: typeof ApiAuthActionProviderServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
  }
}

interface AuthRouteRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute;
  AuthLoginRoute: typeof AuthLoginRoute;
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute;
  AuthSignupRoute: typeof AuthSignupRoute;
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSignupRoute: AuthSignupRoute,
};

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
);

<<<<<<< HEAD
<<<<<<< HEAD
interface DashboardCampaignsCampaignIdRouteChildren {
  DashboardCampaignsCampaignIdZeroRoute: typeof DashboardCampaignsCampaignIdZeroRoute;
  DashboardCampaignsCampaignIdIndexRoute: typeof DashboardCampaignsCampaignIdIndexRoute;
}

const DashboardCampaignsCampaignIdRouteChildren: DashboardCampaignsCampaignIdRouteChildren =
  {
    DashboardCampaignsCampaignIdZeroRoute:
      DashboardCampaignsCampaignIdZeroRoute,
    DashboardCampaignsCampaignIdIndexRoute:
      DashboardCampaignsCampaignIdIndexRoute,
  };

const DashboardCampaignsCampaignIdRouteWithChildren =
  DashboardCampaignsCampaignIdRoute._addFileChildren(
    DashboardCampaignsCampaignIdRouteChildren,
  );

interface DashboardCampaignsRouteChildren {
  DashboardCampaignsCampaignIdRoute: typeof DashboardCampaignsCampaignIdRouteWithChildren;
  DashboardCampaignsCreateRoute: typeof DashboardCampaignsCreateRoute;
  DashboardCampaignsIndexRoute: typeof DashboardCampaignsIndexRoute;
}

const DashboardCampaignsRouteChildren: DashboardCampaignsRouteChildren = {
  DashboardCampaignsCampaignIdRoute:
    DashboardCampaignsCampaignIdRouteWithChildren,
  DashboardCampaignsCreateRoute: DashboardCampaignsCreateRoute,
  DashboardCampaignsIndexRoute: DashboardCampaignsIndexRoute,
};

const DashboardCampaignsRouteWithChildren =
  DashboardCampaignsRoute._addFileChildren(DashboardCampaignsRouteChildren);

interface DashboardEventsRouteChildren {
  DashboardEventsEventIdRoute: typeof DashboardEventsEventIdRoute;
  DashboardEventsCreateRoute: typeof DashboardEventsCreateRoute;
  DashboardEventsIndexRoute: typeof DashboardEventsIndexRoute;
}

const DashboardEventsRouteChildren: DashboardEventsRouteChildren = {
  DashboardEventsEventIdRoute: DashboardEventsEventIdRoute,
  DashboardEventsCreateRoute: DashboardEventsCreateRoute,
  DashboardEventsIndexRoute: DashboardEventsIndexRoute,
=======
=======
interface DashboardAdminRouteRouteChildren {
  DashboardAdminEventsReviewRoute: typeof DashboardAdminEventsReviewRoute;
  DashboardAdminRolesRoute: typeof DashboardAdminRolesRoute;
}

const DashboardAdminRouteRouteChildren: DashboardAdminRouteRouteChildren = {
  DashboardAdminEventsReviewRoute: DashboardAdminEventsReviewRoute,
  DashboardAdminRolesRoute: DashboardAdminRolesRoute,
};

const DashboardAdminRouteRouteWithChildren =
  DashboardAdminRouteRoute._addFileChildren(DashboardAdminRouteRouteChildren);

<<<<<<< HEAD
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
=======
interface DashboardCampaignsRouteChildren {
  DashboardCampaignsCampaignIdRoute: typeof DashboardCampaignsCampaignIdRoute;
  DashboardCampaignsCreateRoute: typeof DashboardCampaignsCreateRoute;
  DashboardCampaignsIndexRoute: typeof DashboardCampaignsIndexRoute;
}

const DashboardCampaignsRouteChildren: DashboardCampaignsRouteChildren = {
  DashboardCampaignsCampaignIdRoute: DashboardCampaignsCampaignIdRoute,
  DashboardCampaignsCreateRoute: DashboardCampaignsCreateRoute,
  DashboardCampaignsIndexRoute: DashboardCampaignsIndexRoute,
};

const DashboardCampaignsRouteWithChildren =
  DashboardCampaignsRoute._addFileChildren(DashboardCampaignsRouteChildren);

>>>>>>> 2c22514 (feat: added baseline campaign functionality, based on games)
interface DashboardEventsRouteChildren {
  DashboardEventsCreateRoute: typeof DashboardEventsCreateRoute;
  DashboardEventsIndexRoute: typeof DashboardEventsIndexRoute;
  DashboardEventsEventIdManageRoute: typeof DashboardEventsEventIdManageRoute;
}

const DashboardEventsRouteChildren: DashboardEventsRouteChildren = {
  DashboardEventsCreateRoute: DashboardEventsCreateRoute,
  DashboardEventsIndexRoute: DashboardEventsIndexRoute,
  DashboardEventsEventIdManageRoute: DashboardEventsEventIdManageRoute,
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
};

const DashboardEventsRouteWithChildren = DashboardEventsRoute._addFileChildren(
  DashboardEventsRouteChildren,
);

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
interface DashboardGamesRouteChildren {
  DashboardGamesGameIdRoute: typeof DashboardGamesGameIdRoute;
  DashboardGamesCreateRoute: typeof DashboardGamesCreateRoute;
  DashboardGamesIndexRoute: typeof DashboardGamesIndexRoute;
}

const DashboardGamesRouteChildren: DashboardGamesRouteChildren = {
  DashboardGamesGameIdRoute: DashboardGamesGameIdRoute,
  DashboardGamesCreateRoute: DashboardGamesCreateRoute,
  DashboardGamesIndexRoute: DashboardGamesIndexRoute,
};

const DashboardGamesRouteWithChildren = DashboardGamesRoute._addFileChildren(
  DashboardGamesRouteChildren,
);

<<<<<<< HEAD
interface DashboardProfileRouteChildren {
  DashboardProfileUserIdRoute: typeof DashboardProfileUserIdRoute;
  DashboardProfileBlocklistRoute: typeof DashboardProfileBlocklistRoute;
  DashboardProfileIndexRoute: typeof DashboardProfileIndexRoute;
}

const DashboardProfileRouteChildren: DashboardProfileRouteChildren = {
  DashboardProfileUserIdRoute: DashboardProfileUserIdRoute,
  DashboardProfileBlocklistRoute: DashboardProfileBlocklistRoute,
  DashboardProfileIndexRoute: DashboardProfileIndexRoute,
};

const DashboardProfileRouteWithChildren =
  DashboardProfileRoute._addFileChildren(DashboardProfileRouteChildren);

interface DashboardSystemsRouteChildren {
  DashboardSystemsSystemIdRoute: typeof DashboardSystemsSystemIdRoute;
  DashboardSystemsIndexRoute: typeof DashboardSystemsIndexRoute;
}

const DashboardSystemsRouteChildren: DashboardSystemsRouteChildren = {
  DashboardSystemsSystemIdRoute: DashboardSystemsSystemIdRoute,
  DashboardSystemsIndexRoute: DashboardSystemsIndexRoute,
};

const DashboardSystemsRouteWithChildren =
  DashboardSystemsRoute._addFileChildren(DashboardSystemsRouteChildren);

=======
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
interface DashboardTeamsTeamIdRouteChildren {
  DashboardTeamsTeamIdManageRoute: typeof DashboardTeamsTeamIdManageRoute;
  DashboardTeamsTeamIdMembersRoute: typeof DashboardTeamsTeamIdMembersRoute;
  DashboardTeamsTeamIdIndexRoute: typeof DashboardTeamsTeamIdIndexRoute;
}

const DashboardTeamsTeamIdRouteChildren: DashboardTeamsTeamIdRouteChildren = {
  DashboardTeamsTeamIdManageRoute: DashboardTeamsTeamIdManageRoute,
  DashboardTeamsTeamIdMembersRoute: DashboardTeamsTeamIdMembersRoute,
  DashboardTeamsTeamIdIndexRoute: DashboardTeamsTeamIdIndexRoute,
};

const DashboardTeamsTeamIdRouteWithChildren =
  DashboardTeamsTeamIdRoute._addFileChildren(DashboardTeamsTeamIdRouteChildren);

interface DashboardTeamsRouteChildren {
  DashboardTeamsTeamIdRoute: typeof DashboardTeamsTeamIdRouteWithChildren;
  DashboardTeamsBrowseRoute: typeof DashboardTeamsBrowseRoute;
  DashboardTeamsCreateRoute: typeof DashboardTeamsCreateRoute;
  DashboardTeamsIndexRoute: typeof DashboardTeamsIndexRoute;
}

const DashboardTeamsRouteChildren: DashboardTeamsRouteChildren = {
  DashboardTeamsTeamIdRoute: DashboardTeamsTeamIdRouteWithChildren,
  DashboardTeamsBrowseRoute: DashboardTeamsBrowseRoute,
  DashboardTeamsCreateRoute: DashboardTeamsCreateRoute,
  DashboardTeamsIndexRoute: DashboardTeamsIndexRoute,
};

const DashboardTeamsRouteWithChildren = DashboardTeamsRoute._addFileChildren(
  DashboardTeamsRouteChildren,
);

interface DashboardRouteRouteChildren {
<<<<<<< HEAD
<<<<<<< HEAD
  DashboardCampaignsRoute: typeof DashboardCampaignsRouteWithChildren;
  DashboardEventsRoute: typeof DashboardEventsRouteWithChildren;
  DashboardGamesRoute: typeof DashboardGamesRouteWithChildren;
=======
  DashboardEventsRoute: typeof DashboardEventsRouteWithChildren;
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
  DashboardAdminRouteRoute: typeof DashboardAdminRouteRouteWithChildren;
  DashboardCampaignsRoute: typeof DashboardCampaignsRouteWithChildren;
  DashboardEventsRoute: typeof DashboardEventsRouteWithChildren;
  DashboardForbiddenRoute: typeof DashboardForbiddenRoute;
<<<<<<< HEAD
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
=======
  DashboardGamesRoute: typeof DashboardGamesRouteWithChildren;
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
  DashboardMembersRoute: typeof DashboardMembersRoute;
  DashboardMembershipRoute: typeof DashboardMembershipRoute;
  DashboardProfileRoute: typeof DashboardProfileRouteWithChildren;
  DashboardReportsRoute: typeof DashboardReportsRoute;
  DashboardSettingsRoute: typeof DashboardSettingsRoute;
  DashboardSocialAuditsRoute: typeof DashboardSocialAuditsRoute;
  DashboardSystemsRoute: typeof DashboardSystemsRouteWithChildren;
  DashboardTeamsRoute: typeof DashboardTeamsRouteWithChildren;
  DashboardIndexRoute: typeof DashboardIndexRoute;
<<<<<<< HEAD
<<<<<<< HEAD
  DashboardReviewsPendingRoute: typeof DashboardReviewsPendingRoute;
=======
  DashboardGamesGameIdRouteRoute: typeof DashboardGamesGameIdRouteRouteWithChildren;
  DashboardGamesCreateRoute: typeof DashboardGamesCreateRoute;
  DashboardGamesIndexRoute: typeof DashboardGamesIndexRoute;
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
<<<<<<< HEAD
<<<<<<< HEAD
  DashboardCampaignsRoute: DashboardCampaignsRouteWithChildren,
  DashboardEventsRoute: DashboardEventsRouteWithChildren,
  DashboardGamesRoute: DashboardGamesRouteWithChildren,
=======
  DashboardEventsRoute: DashboardEventsRouteWithChildren,
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
  DashboardAdminRouteRoute: DashboardAdminRouteRouteWithChildren,
  DashboardCampaignsRoute: DashboardCampaignsRouteWithChildren,
  DashboardEventsRoute: DashboardEventsRouteWithChildren,
  DashboardForbiddenRoute: DashboardForbiddenRoute,
<<<<<<< HEAD
>>>>>>> 4ad1b44 (feat: enhance admin navigation and event management features)
=======
  DashboardGamesRoute: DashboardGamesRouteWithChildren,
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
  DashboardMembersRoute: DashboardMembersRoute,
  DashboardMembershipRoute: DashboardMembershipRoute,
  DashboardProfileRoute: DashboardProfileRouteWithChildren,
  DashboardReportsRoute: DashboardReportsRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardSocialAuditsRoute: DashboardSocialAuditsRoute,
  DashboardSystemsRoute: DashboardSystemsRouteWithChildren,
  DashboardTeamsRoute: DashboardTeamsRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
<<<<<<< HEAD
<<<<<<< HEAD
  DashboardReviewsPendingRoute: DashboardReviewsPendingRoute,
=======
  DashboardGamesGameIdRouteRoute: DashboardGamesGameIdRouteRouteWithChildren,
  DashboardGamesCreateRoute: DashboardGamesCreateRoute,
  DashboardGamesIndexRoute: DashboardGamesIndexRoute,
>>>>>>> add2f43 (feat: baseline UI/UX for the games functionality)
=======
>>>>>>> 7854119 (feat: completed game view/create/edit baseline and improved games listing)
};

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
);

interface OnboardingRouteRouteChildren {
  OnboardingIndexRoute: typeof OnboardingIndexRoute;
}

const OnboardingRouteRouteChildren: OnboardingRouteRouteChildren = {
  OnboardingIndexRoute: OnboardingIndexRoute,
};

const OnboardingRouteRouteWithChildren = OnboardingRouteRoute._addFileChildren(
  OnboardingRouteRouteChildren,
);

interface EventsSlugRouteChildren {
  EventsSlugRegisterRoute: typeof EventsSlugRegisterRoute;
  EventsSlugIndexRoute: typeof EventsSlugIndexRoute;
}

const EventsSlugRouteChildren: EventsSlugRouteChildren = {
  EventsSlugRegisterRoute: EventsSlugRegisterRoute,
  EventsSlugIndexRoute: EventsSlugIndexRoute,
};

const EventsSlugRouteWithChildren = EventsSlugRoute._addFileChildren(
  EventsSlugRouteChildren,
);

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  OnboardingRouteRoute: OnboardingRouteRouteWithChildren,
<<<<<<< HEAD
<<<<<<< HEAD
  EventsRoute: EventsRoute,
  SearchRoute: SearchRoute,
  EventEventIdRoute: EventEventIdRoute,
  GameGameIdRoute: GameGameIdRoute,
  SystemsSlugRoute: SystemsSlugRoute,
  SystemsIndexRoute: SystemsIndexRoute,
  DevEmailTemplateRoute: DevEmailTemplateRoute,
  DevEmailIndexRoute: DevEmailIndexRoute,
=======
  AdminEventsReviewRoute: AdminEventsReviewRoute,
  AdminRolesRoute: AdminRolesRoute,
  EventsSlugRoute: EventsSlugRouteWithChildren,
>>>>>>> d59af27 (chore: update dependencies and enhance event management features)
=======
  AboutRoute: AboutRoute,
  DesignSystemRoute: DesignSystemRoute,
  ResourcesRoute: ResourcesRoute,
  TeamsRoute: TeamsRoute,
  AdminEventsReviewRoute: AdminEventsReviewRoute,
  AdminRolesRoute: AdminRolesRoute,
  EventsSlugRoute: EventsSlugRouteWithChildren,
  EventsIndexRoute: EventsIndexRoute,
>>>>>>> 6c60748 (feat: integrate Vite PWA plugin and enhance app manifest)
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiDebugSquareServerRoute: ApiDebugSquareServerRoute,
  ApiHealthServerRoute: ApiHealthServerRoute,
  ApiTestSquareServerRoute: ApiTestSquareServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiAvatarsFileServerRoute: ApiAvatarsFileServerRoute,
  ApiSocialBlockServerRoute: ApiSocialBlockServerRoute,
  ApiSocialBlocklistServerRoute: ApiSocialBlocklistServerRoute,
  ApiSocialFollowServerRoute: ApiSocialFollowServerRoute,
  ApiSocialRelationshipServerRoute: ApiSocialRelationshipServerRoute,
  ApiSocialUnblockServerRoute: ApiSocialUnblockServerRoute,
  ApiSocialUnfollowServerRoute: ApiSocialUnfollowServerRoute,
  ApiTestCleanupServerRoute: ApiTestCleanupServerRoute,
  ApiWebhooksSquareServerRoute: ApiWebhooksSquareServerRoute,
  ApiAuthActionProviderServerRoute: ApiAuthActionProviderServerRoute,
  ApiPaymentsSquareCallbackServerRoute: ApiPaymentsSquareCallbackServerRoute,
};
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>();
